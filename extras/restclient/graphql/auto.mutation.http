// Copyright (C) 2020 - present Juergen Zimmermann, Hochschule Karlsruhe
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

//
// N e t z w e r k   -   V e r b i n d u n g   n o t w e n d i g
//

### Einloggen in der Rolle "admin", "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "alfred.alpha", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "dirk.delta", password: "p") { token expiresIn roles }
}

### Einloggen mit falschem Passwort
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "FALSCH") { token expiresIn roles }
}

### Neues Auto anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      modell: "Testgraphql",
      kilometerstand: 5000,
      typ: KLEINWAGEN,
      marke: AUDI,
      preis: 22999.99,
      baujahr: "2022-01-31",
      schlagwoerter: ["JAVASCRIPT"]
    }
  )
}

### Neues Auto mit ungueltigen Daten anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      modell: "?!$",
      kilometerstand: 999,
      typ: KLEINWAGEN,
      marke: VW,
      preis: -999,
      baujahr: "123",
      schlagwoerter: ["JAVASCRIPT"]
    }
  )
}

### Vorhandenes Auto aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "00000000-0000-0000-0000-000000000003",
      version: 0,
      modell: "Geaendertgraphql",
      kilometerstand: 5000,
      typ: CABRIO,
      marke: PORSCHE,
      preis: 22999.99,
      baujahr: "2022-02-01",
    }
  )
}

### Vorhandenes Auto mit ungueltigen Werten aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "00000000-0000-0000-0000-000000000003",
      version: 0,
      modell: "?!$",
      kilometerstand: 999,
      typ: KLEINWAGEN,
      marke: VW,
      preis: -999,
      baujahr: "123",
    }
  )
}

### Nicht-Vorhandenes Auto aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "99999999-9999-9999-9999-999999999999",
      version: 0,
      modell: "Nichtvorhanden",
      kilometerstand: 50000,
      typ: TRANSPORTER,
      marke: AUDI,
      preis: 9921.99,
      baujahr: "2022-02-01",
    }
  )
}

### Vorhandenes Auto loeschen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  delete(id: "00000000-0000-0000-0000-000000000060")
}
