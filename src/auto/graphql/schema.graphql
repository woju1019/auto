# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Bücherdaten zu lesen"
type Query {
  autos(modell: String): [Auto!]

  auto(id: ID!): Auto
}

"Funktionen, um Bücher neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: AutoInput!): String

  update(input: AutoUpdateInput!): Int

  delete(id: ID!): Boolean
}

"Datenschema zu einem Auto, das gelesen wird"
type Auto {
  id: ID
  version: Int
  modell: String
  kilometerstand: Int
  typ: Typ
  marke: Marke
  preis: Float
  baujahr: String
  schlagwoerter: [String]
}

"Enum-Typ für die Typ eines Autos"
enum Typ {
  KLEINWAGEN
  TRANSPORTER
  CABRIO
}

"Enum-Typ für den Marke eines Autos"
enum Marke {
  AUDI
  PORSCHE
  VW
}

"Daten für ein neues Auto"
input AutoInput {
  modell: String!
  kilometerstand: Int
  typ: Typ
   marke: Marke!
  preis: Float
  baujahr: String
  schlagwoerter: [String]
}

"Daten für ein zu änderndes Auto"
input AutoUpdateInput {
  id: ID
  version: Int
  modell: String!
  kilometerstand: Int
  typ: Typ
  marke: Marke!
  preis: Float
  baujahr: String
  schlagwoerter: [String]
}
